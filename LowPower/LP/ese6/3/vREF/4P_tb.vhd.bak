library ieee ;
  use ieee.std_logic_1164.all ;
  use ieee.numeric_std.all ;
  use ieee.math_real.all ; -- for UNIFORM, TRUNC


entity counter_tb is
end entity ; -- rca_tb

architecture arch of counter_tb is

component counter is

		CLK		 		: in	std_logic;
		RST				: in 	std_logic;
		COUNT	 		: in 	std_logic;
		DATA_OUT	: out	unsigned (8-1 downto 0);
		UP_DN			: out	std_logic;
end component;

  signal A_TB     : signed(31 downto 0);
  signal B_TB     : signed(31 downto 0);
  signal C_TB     : signed(31 downto 0);
  signal EXTA_TB  :	std_logic;
  signal EXTB_TB  :	std_logic;
  signal INCA_TB  :	std_logic;
  signal INCB_TB  :	std_logic;
  signal CK_TB    : std_logic := '1';
  signal RST_TB   : std_logic;



begin

  DUT : counter
  port map    (
                COUNT => COUNT_TB,
                DATA_OUT => DATA_OUT_TB,
                UP_DN => UP_DN_TB,
                CLK => CK_TB,
                RST => RST_TB
              ); 
     
  CK_TB <= not CK_TB after 2500 ps;
  RST_TB <= '1', '0' after 3 ns;
              
  random : process        
  variable seed1, seed2: positive;
  variable rand_1: real;
  variable rand_2: real;
  variable int_rand_1: integer;
  variable int_rand_2: integer;
  variable sum: signed(31 downto 0);

 
begin
  
 UP_DN_TB <= '1';
 COUNT_TB <= '1';


  for I in 1 to 100 loop

   COUNT_TB <= '1';

  wait until CK_TB'event and CK_TB = '1';

  COUNT_TB <= '0';

  wait for 3000 ns;

  

  end loop;

  wait;

end process;


end architecture ; -- arch
